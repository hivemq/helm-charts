name: Release Charts
on:
  push:
    branches:
      - master
    paths:
      - charts/**
jobs:
  release:
    name: Helm Charts
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout HiveMQ Helm Charts
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4

      - name: Set up JDK 21
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks

      - name: Add dependency chart repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Prepare PGP keys for signing HiveMQ Helm charts
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | gpg --dearmor > $HOME/secring.gpg
          echo "${{ secrets.SIGNING_PASSWORD }}" > $HOME/passphrase
          echo "CR_KEYRING=$HOME/secring.gpg" >> "$GITHUB_ENV"
          echo "CR_PASSPHRASE_FILE=$HOME/passphrase" >> "$GITHUB_ENV"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          config: .github/configs/chart-releaser.yml

      - name: Cleanup GPG files
        if: always() # ensures cleanup even if the previous step fails
        run: |
          rm -f $HOME/secring.gpg
          rm -f $HOME/passphrase

      - name: Set latest release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash ./scripts/set-latest-release.sh

      - name: Update GitHub release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash ./scripts/update-github-release-notes.sh 10
