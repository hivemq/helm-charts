name: Release Charts
on:
  push:
    branches: [master]
    paths:
      - charts/**
  workflow_dispatch:
jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)

    runs-on: ubuntu-latest
    steps:
      - name: Checkout HiveMQ Helm Charts
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4

      - name: Set up JDK 21
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks

      - name: Add dependency chart repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Prepare PGP keys for signing HiveMQ Helm charts
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | gpg --dearmor > $HOME/secring.gpg
          echo "${{ secrets.SIGNING_PASSWORD }}" > $HOME/passphrase
          echo "CR_KEYRING=$HOME/secring.gpg" >> "$GITHUB_ENV"
          echo "CR_PASSPHRASE_FILE=$HOME/passphrase" >> "$GITHUB_ENV"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@a917fd15b20e8b64b94d9158ad54cd6345335584 # v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          config: .github/configs/chart-releaser.yml

      - name: Cleanup GPG files
        if: always() # ensures cleanup even if the previous step fails
        run: |
          rm -f $HOME/secring.gpg
          rm -f $HOME/passphrase

      - name: Set latest release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # get a list of releases with names matching "hivemq-platform-<version>"
          echo "Searching the latest hivemq-platform release"
          releases=$(gh release list --repo hivemq/helm-charts --limit 10 | grep -oP '^hivemq-platform-\K[0-9]+\.[0-9]+\.[0-9]+')
          latest_version=$(echo "$releases" | sort -V | tail -n 1)
          if [ -z "$latest_version" ]; then
            echo "No hivemq-platform releases found"
            exit 1
          fi
          # mark the found release as latest
          latest_release="hivemq-platform-$latest_version"
          gh release edit "$latest_release" --repo hivemq/helm-charts --latest
          echo "Marked $latest_release as the latest release"

      - name: Update GitHub release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: helm-charts
        run: |
          helm repo add hivemq https://hivemq.github.io/helm-charts
          helm repo update
          helm search repo hivemq --versions -o json > charts.json
          gh release list --repo "$REPO" --limit 10 --json name,tagName,publishedAt > releases.json
          GH_PATH=$(which gh)
          PWD=$(pwd)
          ./gradlew :github-release-note-updater:run --args " -g $GH_PATH -p $PWD"
