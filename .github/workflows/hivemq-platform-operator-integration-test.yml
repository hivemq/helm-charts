name: HiveMQ Platform Operator Integration Tests
on:
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
concurrency:
  group: hivemq-operator-platform-integration-test-${{ github.ref }}
  cancel-in-progress: true
jobs:
  platform-integration-test-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        test-plan: [ Upgrade, Extensions, PodSecurityContext, Other ]
    steps:
      - name: Checkout HiveMQ Helm Charts
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          path: helm-charts

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3

      - name: Login to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout HiveMQ Platform Operator on the default branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          repository: hivemq/hivemq-platform-operator
          token: ${{ secrets.JENKINS_GITHUB_TOKEN }}
          path: hivemq-platform-operator

      - name: Checkout HiveMQ Platform Operator on the same or target branch
        working-directory: ${{ github.workspace }}/hivemq-platform-operator
        run: |
          echo "Checking if branch \"${GITHUB_HEAD_REF}\" exists on hivemq-platform-operator"
          BRANCH=$(git ls-remote origin ${GITHUB_HEAD_REF})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out branch with the same name"
            git fetch --all
            git checkout origin/${GITHUB_HEAD_REF}
            exit
          fi
          if [[ "${GITHUB_BASE_REF}" == "master" ]]; then
            exit
          fi
          echo "Checking if branch \"${GITHUB_BASE_REF}\" exists on hivemq-platform-operator"
          BRANCH=$(git ls-remote origin ${GITHUB_BASE_REF})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out target branch"
            git fetch --all
            git checkout origin/${GITHUB_BASE_REF}
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@d9c87d481d55275bb5441eef3fe0e46805f9ef70 # v3
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
          gradle-home-cache-cleanup: true

      - name: Run HiveMQ Platform Operator integration tests
        env:
          TEST_PLAN: ${{ matrix.test-plan }}
        working-directory: helm-charts
        run: ./gradlew :tests-hivemq-platform-operator:integrationTest --tests "*.compose.*"

      - name: Upload HiveMQ Platform Operator test results
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        with:
          name: Test results HiveMQ Platform Operator - Compose ${{ matrix.test-plan }}
          path: |
            helm-charts/tests-hivemq-platform-operator/build/reports/tests/integrationTest/
            helm-charts/tests-hivemq-platform-operator/build/test-results/integrationTest/*.xml
          retention-days: 5

  platform-integration-test-single:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        test-plan: [ CustomConfig, Containers, Volumes, Services1, Services2, Services3, Platform, PodSecurityContext, Other ]
    steps:
      - name: Maximize build space
        if: ${{ matrix.test-plan == 'CustomConfig' || matrix.test-plan == 'Services1' }}
        uses: AdityaGarg8/remove-unwanted-software@e379ba59405864059cedd318f38b6574dffd0ef8 # v4
        with:
          # frees ~2 GB
          remove-dotnet: 'true'
          # frees ~9 GB
          remove-android: 'true'
          # frees ~5.2 GB
          remove-haskell: 'true'
          # frees ~5.4 GB
          remove-codeql: 'true'
          # frees ~3.1 GB
          remove-large-packages: 'true'
          # frees ~4 GB
          remove-swapfile: 'true'

      - name: Checkout HiveMQ Platform Helm Charts
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          path: helm-charts
      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3

      - name: Login to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout HiveMQ Platform Operator on the default branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          repository: hivemq/hivemq-platform-operator
          token: ${{ secrets.JENKINS_GITHUB_TOKEN }}
          path: hivemq-platform-operator

      - name: Checkout HiveMQ Platform Operator on the same or target branch
        working-directory: ${{ github.workspace }}/hivemq-platform-operator
        run: |
          echo "Checking if branch \"${GITHUB_HEAD_REF}\" exists on hivemq-platform-operator"
          BRANCH=$(git ls-remote origin ${GITHUB_HEAD_REF})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out branch with the same name"
            git fetch --all
            git checkout origin/${GITHUB_HEAD_REF}
            exit
          fi
          if [[ "${GITHUB_BASE_REF}" == "master" ]]; then
            exit
          fi
          echo "Checking if branch \"${GITHUB_BASE_REF}\" exists on hivemq-platform-operator"
          BRANCH=$(git ls-remote origin ${GITHUB_BASE_REF})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out target branch"
            git fetch --all
            git checkout origin/${GITHUB_BASE_REF}
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@d9c87d481d55275bb5441eef3fe0e46805f9ef70 # v3
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
          gradle-home-cache-cleanup: true

      - name: Run HiveMQ Platform Operator integration tests
        env:
          TEST_PLAN: ${{ matrix.test-plan }}
        working-directory: helm-charts
        run: ./gradlew :tests-hivemq-platform-operator:integrationTest --tests "*.single.*"

      - name: Upload HiveMQ Platform Operator test results
        if: always()
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        with:
          name: Test results HiveMQ Platform Operator - Single ${{ matrix.test-plan }}
          path: |
            helm-charts/tests-hivemq-platform-operator/build/reports/tests/integrationTest/
            helm-charts/tests-hivemq-platform-operator/build/test-results/integrationTest/*.xml
          retention-days: 5
