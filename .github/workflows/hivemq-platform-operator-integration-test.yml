name: HiveMQ Platform Operator Integration Tests
on:
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
concurrency:
  group: hivemq-operator-platform-integration-test-${{ github.ref }}
  cancel-in-progress: true
jobs:
  platform-integration-test-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        test-plan: [ Upgrade, Extensions, PodSecurityContext, Other ]
    steps:
      - name: Checkout HiveMQ Helm Charts
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          path: helm-charts

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Login to Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout HiveMQ Platform Operator on the default branch
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          repository: hivemq/hivemq-platform-operator
          token: ${{ secrets.JENKINS_TOKEN }}
          path: hivemq-platform-operator

      - name: Checkout HiveMQ Platform Operator on the same branch
        run: |
          echo "Checking if branch \"${GITHUB_REF_NAME}\" exists on hivemq-platform-operator"
          cd hivemq-platform-operator
          BRANCH=$(git ls-remote origin ${GITHUB_REF_NAME})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out branch with the same name"
            git fetch --all
            git checkout origin/${GITHUB_REF_NAME}
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
          gradle-home-cache-cleanup: true

      - name: Run HiveMQ Platform Operator integration tests
        env:
          TEST_PLAN: ${{ matrix.test-plan }}
        working-directory: helm-charts
        run: ./gradlew :tests-hivemq-platform-operator:integrationTest --tests "*.compose.*"

      - name: Upload HiveMQ Platform Operator test results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: Test results HiveMQ Platform Operator - Compose ${{ matrix.test-plan }}
          path: |
            helm-charts/tests-hivemq-platform-operator/build/reports/tests/integrationTest/
            helm-charts/tests-hivemq-platform-operator/build/test-results/integrationTest/*.xml
          retention-days: 5

  platform-integration-test-single:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        test-plan: [ CustomConfig, Services1, Services2, Platform, PodSecurityContext, Other ]
    steps:
      - name: Checkout HiveMQ Platform Helm Charts
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          path: helm-charts
      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Login to Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout HiveMQ Platform Operator on the default branch
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          repository: hivemq/hivemq-platform-operator
          token: ${{ secrets.JENKINS_TOKEN }}
          path: hivemq-platform-operator

      - name: Checkout HiveMQ Platform Operator on the same branch
        run: |
          echo "Checking if branch \"${GITHUB_REF_NAME}\" exists on hivemq-platform-operator"
          cd hivemq-platform-operator
          BRANCH=$(git ls-remote origin ${GITHUB_REF_NAME})
          if [[ -n "${BRANCH}" ]]; then 
            echo "Checking out branch with the same name"
            git fetch --all
            git checkout origin/${GITHUB_REF_NAME}
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3
        with:
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
          gradle-home-cache-cleanup: true

      - name: Run HiveMQ Platform Operator integration tests
        env:
          TEST_PLAN: ${{ matrix.test-plan }}
        working-directory: helm-charts
        run: ./gradlew :tests-hivemq-platform-operator:integrationTest --tests "*.single.*"

      - name: Upload HiveMQ Platform Operator test results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: Test results HiveMQ Platform Operator - Single ${{ matrix.test-plan }}
          path: |
            helm-charts/tests-hivemq-platform-operator/build/reports/tests/integrationTest/
            helm-charts/tests-hivemq-platform-operator/build/test-results/integrationTest/*.xml
          retention-days: 5
