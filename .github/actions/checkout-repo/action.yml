name: 'Checkout Repository'
description: 'Checkout a repository with branch logic'
inputs:
  repository:
    description: 'The repository to checkout'
    required: true
  repository-default-branch:
    description: 'The default branch for this repository (e.g. next-operator-release or master)'
    required: true
  path:
    description: 'Path to checkout the repository'
    required: false
  token:
    description: 'GitHub token to use for the checkout'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        repository: ${{ inputs.repository }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        fetch-depth: 0

    - name: Checkout Repository on the same or target branch
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        if [[ -z "${GITHUB_HEAD_REF}" || -z "${GITHUB_BASE_REF}" ]]; then
          echo "Not a Pull Request. GITHUB_HEAD_REF or GITHUB_BASE_REF are empty"
          exit 1
        fi
        REPOSITORY='${{ inputs.repository }}'
        DEFAULT_BRANCH='${{ inputs.repository-default-branch }}'
        echo "Checking if branch \"${GITHUB_HEAD_REF}\" exists on ${REPOSITORY}"
        BRANCH=$(git ls-remote origin ${GITHUB_HEAD_REF})
        if [[ -n "${BRANCH}" ]]; then
          echo "Checking out branch with the same name"
          git fetch --all
          git checkout origin/${GITHUB_HEAD_REF}
          exit
        fi
        if [[ "${GITHUB_BASE_REF}" == "${DEFAULT_BRANCH}" ]]; then
          echo "Base branch is default branch, keeping default branch checkout"
          exit
        fi
        echo "Checking if base branch \"${GITHUB_BASE_REF}\" exists on ${REPOSITORY}"
        BRANCH=$(git ls-remote origin ${GITHUB_BASE_REF})
        if [[ -n "${BRANCH}" ]]; then
          echo "Checking out target base branch"
          git fetch --all
          git checkout origin/${GITHUB_BASE_REF}
          exit
        fi
        echo "Base branch ${GITHUB_BASE_REF} not found on ${REPOSITORY}, keeping default branch"
