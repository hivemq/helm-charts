{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "allOf" : [
    {
      "if" : {
        "properties" : {
          "migration" : {
            "properties" : {
              "statefulSet" : {
                "const" : true
              }
            },
            "required" : [
              "statefulSet"
            ],
            "type" : "object"
          }
        },
        "required" : [
          "migration"
        ]
      },
      "then" : {
        "properties" : {
          "services" : {
            "items" : {
              "required" : [
                "containerPort",
                "exposed",
                "legacyPortName",
                "type"
              ]
            }
          }
        }
      },
      "else" : {
        "properties" : {
          "services" : {
            "items" : {
              "required" : [
                "containerPort",
                "exposed",
                "type"
              ]
            }
          }
        }
      }
    }
  ],
  "properties" : {
    "additionalContainers" : {
      "items" : {
        "type" : "object"
      },
      "type" : "array"
    },
    "additionalInitContainers" : {
      "type" : "array",
      "items" : {
        "type" : "object"
      }
    },
    "additionalVolumes" : {
      "items" : {
        "properties" : {
          "containerName" : {
            "type" : "string"
          },
          "mountName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "subPath" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [
              "configMap",
              "emptyDir",
              "persistentVolumeClaim",
              "secret"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "type" : "array"
    },
    "config" : {
      "properties" : {
        "create" : {
          "type" : "boolean"
        },
        "createAs" : {
          "description" : "Defines how the HiveMQ Platform configuration should be stored into. Either a Kubernetes ConfigMap or a Kubernetes Secret.",
          "enum" : [
            "ConfigMap",
            "Secret"
          ],
          "type" : "string"
        },
        "customLogbackConfig" : {
          "type" : "string"
        },
        "customTracingConfig" : {
          "type" : "string"
        },
        "dataHub" : {
          "properties" : {
            "behaviorValidationEnabled" : {
              "type" : "boolean"
            },
            "dataValidationEnabled" : {
              "type" : "boolean"
            }
          },
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        },
        "overrideHiveMQConfig" : {
          "type" : "string"
        },
        "overrideStatefulSet" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "controlCenter" : {
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "extensions" : {
      "items" : {
        "properties" : {
          "configMapName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "customizationUri" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "extensionUri" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "integer"
          },
          "requestHeaderSecretName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "secretName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "skipHttpsCertificateValidation" : {
            "description" : "Configures if certificate validation should be skipped for downloads of custom extensions or extension customizations.",
            "type" : "boolean"
          },
          "skipHttpsHostnameVerification" : {
            "description" : "Configures if hostname verification should be skipped for downloads of custom extensions or extension customizations.",
            "type" : "boolean"
          },
          "startPriority" : {
            "type" : "integer"
          },
          "supportsHotReload" : {
            "type" : "boolean"
          }
        },
        "required" : [
          "name"
        ],
        "type" : "object"
      },
      "type" : "array"
    },
    "hivemqClientEventHistory" : {
      "description" : "Configures HiveMQ Client Event History options.",
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "lifetime" : {
          "maximum": 864000,
          "minimum": 1,
          "type" : "integer"
        }
      },
      "type" : "object"
    },
    "hivemqInternalOptions" : {
      "additionalProperties" : false,
      "description" : "HiveMQ Internal Options configuration.",
      "items" : {
        "properties" : {
          "key" : {
            "minLength": 1,
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [
          "key",
          "value"
        ],
        "type" : "object"
      },
      "type": "array"
    },
    "hivemqMqtt" : {
      "description" : "Configures HiveMQ MQTT options. See https://docs.hivemq.com/hivemq/latest/user-guide/configuration.html#mqtt-config.",
      "properties" : {
        "keepAliveAllowUnlimited" : {
          "description" : "Defines whether clients can have unlimited keep alive.",
          "type" : "boolean"
        },
        "keepAliveMax" : {
          "description" : "Defines the maximum keep alive value that a client can set.",
          "maximum": 65535,
          "minimum": 1,
          "type" : "integer"
        },
        "maxPacketSize" : {
          "description" : "Defines the maximum packet size that the broker accepts from clients.",
          "maximum": 268435460,
          "minimum": 15,
          "type" : "integer"
        },
        "maxQualityOfService" : {
          "description" : "Defines the maximum Quality of Service (QoS) level allowed in MQTT PUBLISH messages.",
          "enum": [0, 1, 2],
          "type" : "integer"
        },
        "messageExpiryMaxInterval" : {
          "description" : "Defines the maximum message expiry value that clients can set.",
          "maximum": 4294967296,
          "minimum": 0,
          "type" : "integer"
        },
        "queuedMessagesMaxSize" : {
          "description" : "Sets the maximum number of messages the HiveMQ broker can store per client.",
          "minimum": 1,
          "type" : "integer"
        },
        "queuedMessagesStrategy" : {
          "description" : "Defines how messages that arrive at the HiveMQ broker when the message queue of the corresponding client is full are handled.",
          "enum" : ["discard", "discard-oldest"],
          "type" : "string"
        },
        "retainedMessages" : {
          "description" : "Defines whether retained messages are supported.",
          "type" : "boolean"
        },
        "serverReceiveMaximum" : {
          "description" : "Defines the maximum number of concurrent publishes the broker accepts from one client.",
          "maximum": 65535,
          "minimum": 1,
          "type" : "integer"
        },
        "sharedSubscriptions" : {
          "description" : "Defines whether clients can use shared subscriptions.",
          "type" : "boolean"
        },
        "sessionExpiryMaxInterval" : {
          "description" : "Defines the maximum session expiry value that clients can set.",
          "maximum": 4294967295,
          "minimum": 0,
          "type" : "integer"
        },
        "subscriptionIdentifier" : {
          "description" : "Defines whether clients can use subscription identifiers to associate received publishes with their subscriptions.",
          "type" : "boolean"
        },
        "topicAliasEnabled" : {
          "description" : "Defines whether topic aliases are enabled by the broker.",
          "type" : "boolean"
        },
        "topicAliasMaxPerClient" : {
          "description" : "The number of topic aliases available per client.",
          "maximum": 65535,
          "minimum": 1,
          "type" : "integer"
        },
        "wildcardSubscriptions" : {
          "description" : "Defines whether clients can use wildcard characters in topic filters.",
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqMqttAddons" : {
      "description" : "Configures HiveMQ MQTT Add-on options. See https://docs.hivemq.com/hivemq/latest/user-guide/mqtt-add-ons.html.",
      "properties" : {
        "deadMessagesTopic" : {
          "description" : "Captures all dead messages on the HiveMQ system.",
          "type" : "boolean"
        },
        "droppedMessagesTopic" : {
          "description" : "Captures all dropped messages on the HiveMQ system.",
          "type" : "boolean"
        },
        "expiredMessagesTopic" : {
          "description" : "Captures all expired messages on the HiveMQ system.",
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqMqttSecurity" : {
      "description" : "Configures HiveMQ MQTT security options. See https://docs.hivemq.com/hivemq/latest/user-guide/configuration.html#security.",
      "properties" : {
        "allowEmptyClientId" : {
          "description" : "Allows the use of empty client ids. If this is set to true, HiveMQ automatically generates random client ids, when clientId in the CONNECT packet is empty.",
          "type" : "boolean"
        },
        "allowRequestProblemInformation" : {
          "description" : "Allows the client to request the problem information. When set to false, no reason string or user property values are sent to clients.",
          "type" : "boolean"
        },
        "controlCenterAuditLog" : {
          "description" : "If audit logging for the control center is enabled.",
          "type" : "boolean"
        },
        "payloadFormatValidation" : {
          "description" : "Enables the UTF-8 validation of UTF-8 PUBLISH payloads.",
          "type" : "boolean"
        },
        "utf8Validation" : {
          "description" : "Enables the UTF-8 validation of topic names and client IDs.",
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqRestrictions" : {
      "description" : "Configures the HiveMQ restriction options. See https://docs.hivemq.com/hivemq/latest/user-guide/restrictions.html.",
      "properties" : {
        "incomingBandwidthThrottling" : {
          "description" : "The maximum incoming traffic as bytes per second (b/s).",
          "minimum": 0,
          "type" : "integer"
        },
        "maxClientIdLength" : {
          "description" : "The maximum number of characters HiveMQ accepts in an MQTT-client ID.",
          "maximum": 65535,
          "minimum": 1,
          "type" : "integer"
        },
        "maxConnections" : {
          "description" : "The maximum number of concurrent MQTT connections the HiveMQ instance allows.",
          "minimum": -1,
          "type" : "integer"
        },
        "maxTopicLength" : {
          "description" : "The maximum number of characters HiveMQ accepts in a topic string.",
          "maximum": 65535,
          "minimum": 1,
          "type" : "integer"
        },
        "noConnectIdleTimeout" : {
          "description" : "The time in milliseconds that HiveMQ waits for a CONNECT message of a client before an open TCP socket is closed.",
          "minimum": 0,
          "type" : "integer"
        }
      },
      "type" : "object"
    },
    "image" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "pullPolicy" : {
          "type" : "string",
          "enum" : [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "pullSecretName" : {
          "type" : "string"
        },
        "repository" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        }
      },
      "required" : [
        "name",
        "repository"
      ],
      "type" : "object"
    },
    "license" : {
      "properties" : {
        "additionalLicenses" : {
          "type" : "object"
        },
        "create" : {
          "type" : "boolean"
        },
        "data" : {
          "type" : "string"
        },
        "dataHub" : {
          "type" : "object"
        },
        "extensions" : {
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        },
        "overrideLicense" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "metrics" : {
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "path" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "maximum" : 65535,
          "minimum" : 0
        }
      },
      "type" : "object"
    },
    "migration" : {
      "properties" : {
        "statefulSet" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "nodes" : {
      "properties" : {
        "annotations" : {
          "type" : "object"
        },
        "containerSecurityContext" : {
          "description" : "Configures container security for both HiveMQ Init and HiveMQ main container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence.",
          "properties" : {
            "runAsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsNonRoot" : {
              "type" : "boolean"
            },
            "runAsUser" : {
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        },
        "env" : {
          "items" : {
            "type" : "object"
          },
          "type" : "array"
        },
        "javaOpts" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "object"
        },
        "logLevel" : {
          "type" : "string",
          "enum" : [
            "DEBUG",
            "ERROR",
            "FATAL",
            "INFO",
            "TRACE",
            "WARN"
          ]
        },
        "podSecurityContext" : {
          "description" : "Configures pod-level security for the HiveMQ Platform pod. Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext.",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            },
            "fsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsNonRoot" : {
              "type" : "boolean"
            },
            "runAsUser" : {
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        },
        "replicaCount" : {
          "minimum" : 1,
          "type" : "integer"
        },
        "resources" : {
          "properties" : {
            "cpu" : {
              "type" : "string"
            },
            "ephemeralStorage" : {
              "type" : "string"
            },
            "memory" : {
              "type" : "string"
            },
            "overrideLimits" : {
              "type" : "object"
            }
          },
          "type" : "object"
        },
        "serviceAccountName" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "operator" : {
      "properties" : {
        "selector" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "podScheduling" : {
      "properties" : {
        "affinity" : {
          "type" : "object"
        },
        "tolerations" : {
          "items" : {
            "type" : "object"
          },
          "type" : "array"
        }
      },
      "type" : "object"
    },
    "restApi" : {
      "properties" : {
        "authEnabled" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "services" : {
      "items" : {
        "if" : {
          "properties" : {
            "hivemqListenerName" : {
              "description" : "Defines the optional custom name for the MQTT and WebSocket listeners.",
              "type" : "string"
            }
          },
          "required" : [
            "hivemqListenerName"
          ]
        },
        "then" : {
          "properties" : {
            "type" : {
              "enum" : [
                "mqtt",
                "websocket"
              ]
            }
          }
        },
        "properties" : {
          "annotations" : {
            "type" : "object"
          },
          "containerPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "exposed" : {
            "type" : "boolean"
          },
          "hivemqProxyProtocol" : {
            "type" : "boolean"
          },
          "keystorePassword" : {
            "type" : "string"
          },
          "keystorePasswordSecretKey" : {
            "type" : "string"
          },
          "keystorePasswordSecretName" : {
            "type" : "string"
          },
          "keystorePrivatePassword" : {
            "type" : "string"
          },
          "keystorePrivatePasswordSecretKey" : {
            "type" : "string"
          },
          "keystoreSecretKey" : {
            "type" : "string"
          },
          "keystoreSecretName" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object"
          },
          "legacyPortName" : {
            "type" : "string"
          },
          "name" : {
            "maxLength" : 63,
            "type" : "string"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "serviceType" : {
            "type" : "string",
            "enum" : [
              "ClusterIP",
              "LoadBalancer",
              "NodePort"
            ]
          },
          "sessionAffinity" : {
            "additionalProperties" : false,
            "description": "Used to maintain session affinity. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "properties" : {
              "type" : {
                "description" : "Session affinity type. Must be ClientIP or None. Defaults to `ClientIP` for `control-services` service type.",
                "enum" : [
                  "ClientIP",
                  "None"
                ],
                "type" : "string"
              }
            },
            "type": "object"
          },
          "tlsClientAuthenticationMode" : {
            "enum" : [
              "NONE",
              "OPTIONAL",
              "REQUIRED"
            ],
            "type" : "string"
          },
          "truststorePassword" : {
            "type" : "string"
          },
          "truststorePasswordSecretName" : {
            "type" : "string"
          },
          "truststoreSecretKey" : {
            "type" : "string"
          },
          "truststoreSecretName" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [
              "control-center",
              "metrics",
              "mqtt",
              "rest-api",
              "websocket"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "type" : "array"
    },
    "volumeClaimTemplates" : {
      "items" : {
        "properties" : {
          "apiVersion" : {
            "enum" : [
              "v1"
            ],
            "type" : "string"
          },
          "kind" : {
            "enum" : [
              "PersistentVolumeClaim"
            ],
            "type" : "string"
          },
          "metadata" : {
            "type" : "object"
          },
          "spec" : {
            "type" : "object"
          }
        },
        "required" : [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type" : "object"
      },
      "type" : "array"
    }
  },
  "type" : "object"
}
