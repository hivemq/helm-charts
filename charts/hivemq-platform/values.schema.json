{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "allOf" : [
    {
      "if" : {
        "properties" : {
          "migration" : {
            "properties" : {
              "statefulSet" : {
                "const" : true
              }
            },
            "required" : [
              "statefulSet"
            ],
            "type" : "object"
          }
        },
        "required" : [
          "migration"
        ]
      },
      "then" : {
        "properties" : {
          "services" : {
            "items" : {
              "required" : [
                "containerPort",
                "exposed",
                "legacyPortName",
                "type"
              ]
            }
          }
        }
      },
      "else" : {
        "properties" : {
          "services" : {
            "items" : {
              "required" : [
                "containerPort",
                "exposed",
                "type"
              ]
            }
          }
        }
      }
    }
  ],
  "properties" : {
    "additionalContainers" : {
      "items" : {
        "type" : "object"
      },
      "type" : "array"
    },
    "additionalInitContainers" : {
      "type" : "array",
      "items" : {
        "type" : "object"
      }
    },
    "additionalVolumes" : {
      "items" : {
        "properties" : {
          "containerName" : {
            "type" : "string"
          },
          "mountName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "subPath" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [
              "configMap",
              "emptyDir",
              "persistentVolumeClaim",
              "secret"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "type" : "array"
    },
    "config" : {
      "properties" : {
        "create" : {
          "type" : "boolean"
        },
        "createAs" : {
          "description" : "Defines how the HiveMQ Platform configuration should be stored into. Either a Kubernetes ConfigMap or a Kubernetes Secret",
          "enum" : [
            "ConfigMap",
            "Secret"
          ],
          "type" : "string"
        },
        "customLogbackConfig" : {
          "type" : "string"
        },
        "customTracingConfig" : {
          "type" : "string"
        },
        "dataHub" : {
          "properties" : {
            "behaviorValidationEnabled" : {
              "type" : "boolean"
            },
            "dataValidationEnabled" : {
              "type" : "boolean"
            }
          },
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        },
        "overrideHiveMQConfig" : {
          "type" : "string"
        },
        "overrideStatefulSet" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "controlCenter" : {
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "extensions" : {
      "items" : {
        "properties" : {
          "configMapName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "customizationUri" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "extensionUri" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "integer"
          },
          "requestHeaderSecretName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "secretName" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "skipHttpsCertificateValidation" : {
            "description" : "Configures if certificate validation should be skipped for downloads of custom extensions or extension customizations",
            "type" : "boolean"
          },
          "skipHttpsHostnameVerification" : {
            "description" : "Configures if hostname verification should be skipped for downloads of custom extensions or extension customizations",
            "type" : "boolean"
          },
          "startPriority" : {
            "type" : "integer"
          },
          "supportsHotReload" : {
            "type" : "boolean"
          }
        },
        "required" : [
          "name"
        ],
        "type" : "object"
      },
      "type" : "array"
    },
    "hivemqMqtt" : {
      "properties" : {
        "keepAliveAllowUnlimited" : {
          "type" : "boolean"
        },
        "keepAliveMax" : {
          "type" : "integer"
        },
        "maxPacketSize" : {
          "type" : "integer"
        },
        "maxQualityOfService" : {
          "type" : "integer"
        },
        "messageExpiryMaxInterval" : {
          "type" : "integer"
        },
        "queuedMessagesMaxSize" : {
          "type" : "integer"
        },
        "queuedMessagesStrategy" : {
          "type" : "string"
        },
        "retainedMessages" : {
          "type" : "boolean"
        },
        "serverReceiveMaximum" : {
          "type" : "integer"
        },
        "sharedSubscriptions" : {
          "type" : "boolean"
        },
        "sessionExpiryMaxInterval" : {
          "type" : "integer"
        },
        "subscriptionIdentifier" : {
          "type" : "boolean"
        },
        "topicAliasEnabled" : {
          "type" : "boolean"
        },
        "topicAliasMaxPerClient" : {
          "type" : "integer"
        },
        "wildcardSubscriptions" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqMqttAddons" : {
      "properties" : {
        "deadMessagesTopic" : {
          "type" : "boolean"
        },
        "droppedMessagesTopic" : {
          "type" : "boolean"
        },
        "expiredMessagesTopic" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqMqttSecurity" : {
      "properties" : {
        "allowEmptyClientId" : {
          "type" : "boolean"
        },
        "allowRequestProblemInformation" : {
          "type" : "boolean"
        },
        "controlCenterAuditLog" : {
          "type" : "boolean"
        },
        "payloadFormatValidation" : {
          "type" : "boolean"
        },
        "utf8Validation" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "hivemqRestrictions" : {
      "properties" : {
        "incomingBandwidthThrottling" : {
          "type" : "integer"
        },
        "maxClientIdLength" : {
          "type" : "integer"
        },
        "maxConnections" : {
          "type" : "integer"
        },
        "noConnectIdleTimeout" : {
          "type" : "integer"
        }
      },
      "type" : "object"
    },
    "image" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "pullPolicy" : {
          "type" : "string",
          "enum" : [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "pullSecretName" : {
          "type" : "string"
        },
        "repository" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        }
      },
      "required" : [
        "name",
        "repository"
      ],
      "type" : "object"
    },
    "license" : {
      "properties" : {
        "additionalLicenses" : {
          "type" : "object"
        },
        "create" : {
          "type" : "boolean"
        },
        "data" : {
          "type" : "string"
        },
        "dataHub" : {
          "type" : "object"
        },
        "extensions" : {
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        },
        "overrideLicense" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "metrics" : {
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "path" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "maximum" : 65535,
          "minimum" : 0
        }
      },
      "type" : "object"
    },
    "migration" : {
      "properties" : {
        "statefulSet" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "nodes" : {
      "properties" : {
        "annotations" : {
          "type" : "object"
        },
        "containerSecurityContext" : {
          "description" : "Configures container security for both HiveMQ Init and HiveMQ main container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence.",
          "properties" : {
            "runAsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsNonRoot" : {
              "type" : "boolean"
            },
            "runAsUser" : {
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        },
        "env" : {
          "items" : {
            "type" : "object"
          },
          "type" : "array"
        },
        "javaOpts" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "object"
        },
        "logLevel" : {
          "type" : "string",
          "enum" : [
            "DEBUG",
            "ERROR",
            "FATAL",
            "INFO",
            "TRACE",
            "WARN"
          ]
        },
        "podSecurityContext" : {
          "description" : "Configures pod-level security for the HiveMQ Platform pod. Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext.",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            },
            "fsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsGroup" : {
              "format" : "int64",
              "type" : "integer"
            },
            "runAsNonRoot" : {
              "type" : "boolean"
            },
            "runAsUser" : {
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        },
        "replicaCount" : {
          "minimum" : 1,
          "type" : "integer"
        },
        "resources" : {
          "properties" : {
            "cpu" : {
              "type" : "string"
            },
            "ephemeralStorage" : {
              "type" : "string"
            },
            "memory" : {
              "type" : "string"
            },
            "overrideLimits" : {
              "type" : "object"
            }
          },
          "type" : "object"
        },
        "serviceAccountName" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "operator" : {
      "properties" : {
        "selector" : {
          "type" : "string"
        }
      },
      "type" : "object"
    },
    "podScheduling" : {
      "properties" : {
        "affinity" : {
          "type" : "object"
        },
        "tolerations" : {
          "items" : {
            "type" : "object"
          },
          "type" : "array"
        }
      },
      "type" : "object"
    },
    "restApi" : {
      "properties" : {
        "authEnabled" : {
          "type" : "boolean"
        }
      },
      "type" : "object"
    },
    "services" : {
      "items" : {
        "if" : {
          "properties" : {
            "hivemqListenerName" : {
              "description" : "Defines the optional custom name for the MQTT and WebSocket listeners",
              "type" : "string"
            }
          },
          "required" : [
            "hivemqListenerName"
          ]
        },
        "then" : {
          "properties" : {
            "type" : {
              "enum" : [
                "mqtt",
                "websocket"
              ]
            }
          }
        },
        "properties" : {
          "annotations" : {
            "type" : "object"
          },
          "containerPort" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "exposed" : {
            "type" : "boolean"
          },
          "hivemqProxyProtocol" : {
            "type" : "boolean"
          },
          "keystorePassword" : {
            "type" : "string"
          },
          "keystorePasswordSecretKey" : {
            "type" : "string"
          },
          "keystorePasswordSecretName" : {
            "type" : "string"
          },
          "keystorePrivatePassword" : {
            "type" : "string"
          },
          "keystorePrivatePasswordSecretKey" : {
            "type" : "string"
          },
          "keystoreSecretKey" : {
            "type" : "string"
          },
          "keystoreSecretName" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object"
          },
          "legacyPortName" : {
            "type" : "string"
          },
          "name" : {
            "maxLength" : 63,
            "type" : "string"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "serviceType" : {
            "type" : "string",
            "enum" : [
              "ClusterIP",
              "LoadBalancer",
              "NodePort"
            ]
          },
          "tlsClientAuthenticationMode" : {
            "enum" : [
              "NONE",
              "OPTIONAL",
              "REQUIRED"
            ],
            "type" : "string"
          },
          "truststorePassword" : {
            "type" : "string"
          },
          "truststorePasswordSecretName" : {
            "type" : "string"
          },
          "truststoreSecretKey" : {
            "type" : "string"
          },
          "truststoreSecretName" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [
              "control-center",
              "metrics",
              "mqtt",
              "rest-api",
              "websocket"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "type" : "array"
    },
    "volumeClaimTemplates" : {
      "items" : {
        "properties" : {
          "apiVersion" : {
            "enum" : [
              "v1"
            ],
            "type" : "string"
          },
          "kind" : {
            "enum" : [
              "PersistentVolumeClaim"
            ],
            "type" : "string"
          },
          "metadata" : {
            "type" : "object"
          },
          "spec" : {
            "type" : "object"
          }
        },
        "required" : [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type" : "object"
      },
      "type" : "array"
    }
  },
  "type" : "object"
}
