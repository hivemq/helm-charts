suite: HiveMQ Platform Configuration as ConfigMap - REST API listeners tests
templates:
  - hivemq-configuration.yml
release:
  name: test-hivemq-platform
  namespace: test-hivemq-platform-namespace
chart:
  version: 0.0.1
  appVersion: 1.0.0
set:
  config.createAs: ConfigMap
asserts:
  - containsDocument:
    apiVersion: v1
    kind: ConfigMap
    name: hivemq-configuration-test-hivemq-platform
    namespace: test-hivemq-platform-namespace
tests:

  - it: with a Rest API service exposed
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<enabled>true</enabled>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<port>8890</port>.*?</rest-api>"

  - it: with a Rest API service not being exposed
    set:
      services:
        - type: rest-api
          exposed: false
          containerPort: 8890
    asserts:
      - exists:
          path: data["config.xml"]
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<enabled>true</enabled>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<port>8890</port>.*?</rest-api>"

  - it: with REST API authentication enabled
    set:
      restApi.authEnabled: true
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<enabled>true</enabled>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<auth>.*?<enabled>true</enabled>.*?</auth>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<port>8890</port>.*?</rest-api>"

  - it: with default REST API authentication
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<enabled>true</enabled>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<auth>.*?<enabled>false</enabled>.*?</auth>.*?</rest-api>"

  - it: with a REST API service exposed and a listener name
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          hivemqListenerName: my-custom-rest-api-listener
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<name>my-custom-rest-api-listener</name>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a REST API exposed and an empty listener name
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          hivemqListenerName: ""
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<name>.*?</name>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service enabled, using keystorePassword
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystoreSecretKey: "keystore.jks"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
    asserts:
      - exists:
          path: data["config.xml"]
      - equal:
          path: data["config.xml"]
          value: |-
            <?xml version="1.0"?>
            <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
              <cluster>
                <transport>
                  <tcp>
                    <bind-address>0.0.0.0</bind-address>
                    <bind-port>7000</bind-port>
                  </tcp>
                </transport>
                <enabled>true</enabled>
                <discovery>
                  <extension/>
                </discovery>
              </cluster>
              <!-- required and should not be configured different -->
              <health-api>
                <enabled>true</enabled>
                <listeners>
                  <http>
                    <port>8889</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </health-api>
              <rest-api>
                <enabled>true</enabled>
                <auth>
                  <enabled>false</enabled>
                </auth>
                <listeners>
                  <https>
                    <port>8890</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore.jks</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                </listeners>
              </rest-api>
            </hivemq>

  - it: with a secure REST API service enabled, using keystorePasswordSecretName
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystoreSecretKey: "keystore.jks"
          keystorePasswordSecretName: "rest-api-keystore-password"
    asserts:
      - exists:
          path: data["config.xml"]
      - equal:
          path: data["config.xml"]
          value: |-
            <?xml version="1.0"?>
            <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
              <cluster>
                <transport>
                  <tcp>
                    <bind-address>0.0.0.0</bind-address>
                    <bind-port>7000</bind-port>
                  </tcp>
                </transport>
                <enabled>true</enabled>
                <discovery>
                  <extension/>
                </discovery>
              </cluster>
              <!-- required and should not be configured different -->
              <health-api>
                <enabled>true</enabled>
                <listeners>
                  <http>
                    <port>8889</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </health-api>
              <rest-api>
                <enabled>true</enabled>
                <auth>
                  <enabled>false</enabled>
                </auth>
                <listeners>
                  <https>
                    <port>8890</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore.jks</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                </listeners>
              </rest-api>
            </hivemq>

  - it: with a secure REST API service disabled, no secure REST API service is exposed
    set:
      services:
        - type: rest-api
          exposed: false
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystoreSecretKey: "keystore.jks"
          keystorePasswordSecretName: "rest-api-keystore-password"
    asserts:
      - exists:
          path: data["config.xml"]
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?<listeners>.*?</rest-api>"

  - it: with a secure REST API services exposed using a custom keystore private password
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
          keystorePrivatePassword: "cHJpdmF0ZS1rZXktY2hhbmdlbWU=" # private-key-changeme
        - type: rest-api
          exposed: true
          containerPort: 8891
          keystoreSecretName: "rest-api-secret1"
          keystorePasswordSecretName: "secret-password1"
          keystorePasswordSecretKey: "keystore.password1"
          keystorePrivatePasswordSecretKey: "my-custom-secret-key.private-password"
    asserts:
      - exists:
          path: data["config.xml"]
      - equal:
          path: data["config.xml"]
          value: |-
            <?xml version="1.0"?>
            <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
              <cluster>
                <transport>
                  <tcp>
                    <bind-address>0.0.0.0</bind-address>
                    <bind-port>7000</bind-port>
                  </tcp>
                </transport>
                <enabled>true</enabled>
                <discovery>
                  <extension/>
                </discovery>
              </cluster>
              <!-- required and should not be configured different -->
              <health-api>
                <enabled>true</enabled>
                <listeners>
                  <http>
                    <port>8889</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </health-api>
              <rest-api>
                <enabled>true</enabled>
                <auth>
                  <enabled>false</enabled>
                </auth>
                <listeners>
                  <https>
                    <port>8890</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8891</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret1/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                </listeners>
              </rest-api>
            </hivemq>

  - it: with a secure REST API services exposed reusing the same keystore password and keystore private password
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
          keystorePrivatePassword: "cHJpdmF0ZS1rZXktY2hhbmdlbWU=" # private-key-changeme
        - type: rest-api
          exposed: true
          containerPort: 8891
          keystoreSecretName: "rest-api-secret"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
          keystorePrivatePassword: "cHJpdmF0ZS1rZXktY2hhbmdlbWU=" # private-key-changeme
        - type: rest-api
          exposed: true
          containerPort: 8892
          keystoreSecretName: "rest-api-secret1"
          keystorePasswordSecretName: "secret-password1"
          keystorePasswordSecretKey: "keystore.password1"
          keystorePrivatePasswordSecretKey: "my-custom-secret-key.private-password"
        - type: rest-api
          exposed: true
          containerPort: 8893
          keystoreSecretName: "rest-api-secret1"
          keystorePasswordSecretName: "secret-password1"
          keystorePasswordSecretKey: "keystore.password1"
          keystorePrivatePasswordSecretKey: "my-custom-secret-key.private-password"
    asserts:
      - exists:
          path: data["config.xml"]
      - equal:
          path: data["config.xml"]
          value: |-
            <?xml version="1.0"?>
            <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
              <cluster>
                <transport>
                  <tcp>
                    <bind-address>0.0.0.0</bind-address>
                    <bind-port>7000</bind-port>
                  </tcp>
                </transport>
                <enabled>true</enabled>
                <discovery>
                  <extension/>
                </discovery>
              </cluster>
              <!-- required and should not be configured different -->
              <health-api>
                <enabled>true</enabled>
                <listeners>
                  <http>
                    <port>8889</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </health-api>
              <rest-api>
                <enabled>true</enabled>
                <auth>
                  <enabled>false</enabled>
                </auth>
                <listeners>
                  <https>
                    <port>8890</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8891</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8892</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret1/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8893</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret1/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                </listeners>
              </rest-api>
            </hivemq>

  - it: with several secure and non-secure REST API services
    values:
      - ../../tls-rest-services-values.yaml
    asserts:
      - exists:
          path: data["config.xml"]
      - equal:
          path: data["config.xml"]
          value: |-
            <?xml version="1.0"?>
            <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">
              <cluster>
                <transport>
                  <tcp>
                    <bind-address>0.0.0.0</bind-address>
                    <bind-port>7000</bind-port>
                  </tcp>
                </transport>
                <enabled>true</enabled>
                <discovery>
                  <extension/>
                </discovery>
              </cluster>
              <!-- required and should not be configured different -->
              <health-api>
                <enabled>true</enabled>
                <listeners>
                  <http>
                    <port>8889</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </health-api>
              <rest-api>
                <enabled>true</enabled>
                <auth>
                  <enabled>false</enabled>
                </auth>
                <listeners>
                  <https>
                    <port>8890</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8891</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret_keystore_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8892</port>
                    <bind-address>0.0.0.0</bind-address>
                    <name>my-custom-secure-rest-api-listener-8892</name>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret1/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret1_keystore_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8894</port>
                    <bind-address>0.0.0.0</bind-address>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret3/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret3_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret3_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <https>
                    <port>8895</port>
                    <bind-address>0.0.0.0</bind-address>
                    <name>my-custom-secure-rest-api-listener-8895</name>
                    <tls>
                      <keystore>
                        <path>/tls-rest-api-secret4/keystore</path>
                        <password>${rest-api_test-hivemq-platform_rest-api-secret4_keystore_pass}</password>
                        <private-key-password>${rest-api_test-hivemq-platform_rest-api-secret4_keystore_private_pass}</private-key-password>
                      </keystore>
                    </tls>
                  </https>
                  <http>
                    <port>8888</port>
                    <bind-address>0.0.0.0</bind-address>
                  </http>
                </listeners>
              </rest-api>
            </hivemq>

  - it: with duplicated container port in multiple REST API services, no duplicated listener is created
    set:
      services:
        - type: rest-api
          name: my-rest-1
          exposed: true
          containerPort: 8890
        - type: rest-api
          name: my-rest-2
          exposed: true
          containerPort: 8890
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with duplicated container port in multiple secure REST API services, no duplicated listener is created
    set:
      services:
        - type: rest-api
          name: my-secure-rest-1
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
          keystorePrivatePassword: "cHJpdmF0ZS1rZXktY2hhbmdlbWU=" # private-key-changeme
        - type: rest-api
          name: my-secure-rest-2
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePassword: "a2V5LWNoYW5nZW1lCg==" # key-changeme
          keystorePrivatePassword: "cHJpdmF0ZS1rZXktY2hhbmdlbWU=" # private-key-changeme
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and a listener name
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "my-keystore-secret"
          hivemqListenerName: my-custom-secure-rest-api-listener
    asserts:
      - exists:
          path: data["config.xml"]
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<name>my-custom-secure-rest-api-listener</name>.*?</http>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<name>my-custom-secure-rest-api-listener</name>.*?</https>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and an empty listener name
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "my-keystore-secret"
          hivemqListenerName: ""
    asserts:
      - exists:
          path: data["config.xml"]
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<port>8890</port>.*?</http>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?<name>.*?</name>.*?</http>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<name>.*?</name>.*?</https>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and TLS protocol set
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
            - TLSv1.2
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<protocols>.*?<protocol>TLSv1.2</protocol>.*?</protocols>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and several TLS protocols set
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
            - TLSv1.2
            - TLSv1.3
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<protocols>.*?<protocol>TLSv1.2</protocol>.*?</protocols>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<protocols>.*?<protocol>TLSv1.3</protocol>.*?</protocols>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and TLS protocols defined with no protocol, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and empty TLS protocols list, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
            -
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and TLS protocols defined with blank space only, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
            - " "
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and TLS protocols defined with an invalid additional property, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsProtocols:
            protocol: TLSv1.2
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and Cipher suite set
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<cipher-suites>.*?<cipher-suite>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</cipher-suite>.*?</cipher-suites>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and several Cipher suites set
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    asserts:
      - exists:
          path: data["config.xml"]
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<port>8890</port>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<cipher-suites>.*?<cipher-suite>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</cipher-suite>.*?</cipher-suites>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - matchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<https>.*?<tls>.*?<cipher-suites>.*?<cipher-suite>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</cipher-suite>.*?</cipher-suites>.*?</tls>.*?</https>.*?</listeners>.*?</rest-api>"
      - notMatchRegex:
          path: data["config.xml"]
          pattern: "(?s)<rest-api>.*?<listeners>.*?<http>.*?</http>.*?</listeners>.*?</rest-api>"

  - it: with a secure REST API service exposed and Cipher suites defined with no suite, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and empty Cipher suites list, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
            -
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and Cipher suites defined with blank space only, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
            - " "
    asserts:
      - failedTemplate: {}

  - it: with a secure REST API service exposed and Cipher suites defined with an invalid additional property, schema validation fails
    set:
      services:
        - type: rest-api
          exposed: true
          containerPort: 8890
          keystoreSecretName: "rest-api-secret"
          keystorePasswordSecretName: "secret-password"
          tlsCipherSuites:
            cipherSuite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    asserts:
      - failedTemplate: {}
