suite: test HiveMQ Platform Operator with TLS and plaintext password
templates:
  - deployment.yml
tests:
  - it: with TLS with plaintext password configuration
    set:
      tls.secretName: my-tls-secret
      tls.keystorePassword: my-keystore-password
      tls.truststorePassword: my-truststore-password
    asserts:
      - equal:
          path: spec.replicas
          value: 1
      - isKind:
          of: Deployment
      - isNotEmpty:
          path: spec.template.spec.containers[0]
      - isNotEmpty:
          path: spec.template.spec.containers[0].env
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: quarkus.http.ssl.certificate.key-store-file-type
            value: "JKS"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: quarkus.http.ssl.certificate.key-store-file
            value: "/mnt/tls/keystore.jks"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: quarkus.http.ssl.certificate.trust-store-file
            value: "/mnt/tls/truststore.jks"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: quarkus.http.ssl.certificate.key-store-password
            value: "my-keystore-password"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: quarkus.http.ssl.certificate.trust-store-password
            value: "my-truststore-password"
      - isNotEmpty:
          path: spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: tls
            mountPath: /mnt/tls
            readOnly: true
      - isNotEmpty:
          path: spec.template.spec.volumes
      - contains:
          path: spec.template.spec.volumes
          content:
            name: tls
            secret:
              secretName: my-tls-secret
