suite: HiveMQ Platform Operator - RBAC tests
templates:
  - rbac.yml
release:
  name: operator
chart:
  version: 0.0.1
  appVersion: 1.0.0
tests:

  - it: with default values, default ClusterRole created
    asserts:
      - containsDocument:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          name: hivemq-platform-operator-role-operator

  - it: with default values, default labels created
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            helm.sh/chart: hivemq-platform-operator-0.0.1
            app.kubernetes.io/name: hivemq-platform-operator
            app.kubernetes.io/instance: operator
            app.kubernetes.io/version: 1.0.0
            app.kubernetes.io/managed-by: Helm

  - it: with long Helm release name, ClusterRole name truncated
    release:
      name: a-very-long-hivemq-platform-operator-release-name
    asserts:
      - equal:
          path: metadata.name
          value: hivemq-platform-operator-role-a-very-long-hivemq-platform-opera

  - it: with disabled RBAC creation, no RBAC created
    set:
      rbac.create: false
    asserts:
      - notFailedTemplate: {}
      - hasDocuments:
          count: 0

  - it: with default platform service account settings
    asserts:
      - exists:
          path: rules
      - contains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]
      - contains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "roles", "rolebindings" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]
      - contains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "clusterroles", "clusterrolebindings" ]
            verbs: [ "get", "list", "watch" ]

  - it: with platform service account create and validate enabled
    set:
      hivemqPlatformServiceAccount.create: true
      hivemqPlatformServiceAccount.validate: true
    asserts:
      - contains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]

  - it: with platform service account create disabled
    set:
      hivemqPlatformServiceAccount.create: false
      hivemqPlatformServiceAccount.validate: true
    asserts:
      - contains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch" ]

  - it: with platform service account validate disabled
    set:
      hivemqPlatformServiceAccount.create: true
      hivemqPlatformServiceAccount.validate: false
    asserts:
      - contains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]

  - it: with platform service account create and validate disabled
    set:
      hivemqPlatformServiceAccount.create: false
      hivemqPlatformServiceAccount.validate: false
    asserts:
      - notContains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch" ]
      - notContains:
          path: rules
          content:
            apiGroups: [ "" ]
            resources: [ "serviceaccounts" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]

  - it: with platform service account permissions create and validate enabled
    set:
      hivemqPlatformServiceAccount.permissions.create: true
      hivemqPlatformServiceAccount.permissions.validate: true
    asserts:
        - contains:
            path: rules
            content:
              apiGroups: [ "rbac.authorization.k8s.io" ]
              resources: [ "roles", "rolebindings" ]
              verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]
        - contains:
            path: rules
            content:
              apiGroups: [ "rbac.authorization.k8s.io" ]
              resources: [ "clusterroles", "clusterrolebindings" ]
              verbs: [ "get", "list", "watch" ]

  - it: with platform service account permissions create disabled
    set:
      hivemqPlatformServiceAccount.permissions.create: false
      hivemqPlatformServiceAccount.permissions.validate: true
    asserts:
      - contains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "roles", "rolebindings" ]
            verbs: [ "get", "list", "watch" ]
      - contains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "clusterroles", "clusterrolebindings" ]
            verbs: [ "get", "list", "watch" ]

  - it: with platform service account permissions validate disabled
    set:
      hivemqPlatformServiceAccount.permissions.create: true
      hivemqPlatformServiceAccount.permissions.validate: false
    asserts:
      - contains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "roles", "rolebindings" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]
      - notContains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "clusterroles", "clusterrolebindings" ]
            verbs: [ "get", "list", "watch" ]

  - it: with platform service account permissions create and validate disabled
    set:
      hivemqPlatformServiceAccount.permissions.create: false
      hivemqPlatformServiceAccount.permissions.validate: false
    asserts:
      - notContains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "roles", "rolebindings" ]
            verbs: [ "get", "list", "watch", "create", "patch", "update", "delete" ]
      - notContains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "roles", "rolebindings" ]
            verbs: [ "get", "list", "watch" ]
      - notContains:
          path: rules
          content:
            apiGroups: [ "rbac.authorization.k8s.io" ]
            resources: [ "clusterroles", "clusterrolebindings" ]
            verbs: [ "get", "list", "watch" ]
